{"version":3,"file":"index-SGlIpAUj.js","sources":["../../../../src/views/post/post-list/index.vue"],"sourcesContent":["<template>\n  <div class=\"post-list\">\n    <ul class=\"post-items\" v-if=\"posts.length !== 0\">\n      <li v-for=\"(post, index) in posts\" :key=\"index\" class=\"post-item\">\n        <p class=\"post-time\">{{ post.created_at }}</p>\n        <h1 class=\"post-title\">\n          <router-link :to=\"'/posts/' + post.id\">{{ post.title }}</router-link>\n        </h1>\n        <div class=\"post-abstract markdown-body\" v-html=\"compiledMarkdown(post.abstract)\"></div>\n        <p>\n          <router-link :to=\"'/posts/' + post.id\" class=\"post-entry\"> Read More... </router-link>\n        </p>\n        <p>\n          <span v-for=\"(tag, index) in post.tags\" :key=\"index\" class=\"post-tag\">\n            {{ tag.name }}\n          </span>\n        </p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { watchEffect } from 'vue';\nimport { storeToRefs } from 'pinia';\nimport marked from '@/assets/scripts/marked';\nimport { useStateStore } from '@/stores/state';\n\ndefineOptions({\n  name: 'PostList'\n});\n\nconst route = useRoute();\nconst stateStore = useStateStore();\nconst { posts, selectTags, searchTags } = storeToRefs(stateStore);\n\nif (route.query.tags) {\n  selectTags.value = [{ id: route.query.tags }];\n} else {\n  await stateStore.indexPost();\n}\n\nwatchEffect(async () => {\n  await stateStore.indexPost({\n    tags: searchTags.value.join(',')\n  });\n});\n\nconst compiledMarkdown = (value: any) => {\n  return marked(value);\n};\n</script>\n\n<style lang=\"scss\" scoped>\n$black: #111;\n$gray-dark: #999;\n$gray: #eee;\n\n.post-list {\n  padding-top: 85px;\n}\n\n.post-items {\n  list-style: none;\n  margin: 0 auto;\n  padding: 0 30px;\n  max-width: calc(1000px - (30px * 2));\n}\n\n.post-item {\n  margin: 0 auto 15px;\n  border-bottom: 1px solid $gray;\n}\n\n.post-time {\n  color: $gray-dark;\n  font-size: 14px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  margin-top: 2px;\n}\n\n.post-title {\n  font-weight: 400;\n  font-size: 24px;\n  word-break: break-all;\n\n  a {\n    text-decoration: none;\n    color: $black;\n  }\n}\n\n.post-abstract {\n  margin-bottom: 5px;\n}\n\n.post-entry {\n  font-size: 14px;\n  text-decoration: none;\n  color: $gray-dark;\n}\n\n.post-tag {\n  font-size: 14px;\n  display: inline-block;\n  border: 1px solid $gray;\n  border-radius: 5px;\n  margin-right: 10px;\n  padding: 5px;\n  color: $gray-dark;\n}\n\n@media screen and (max-width: 850px) {\n  .post-list {\n    position: relative;\n    padding-top: 80px;\n  }\n\n  .post-item {\n    margin-bottom: 10px;\n  }\n}\n</style>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,UAAM,QAAQ;AACd,UAAM,aAAa;AACnB,UAAM,EAAE,OAAO,YAAY,WAAW,IAAI,YAAY,UAAU;AAE5D,QAAA,MAAM,MAAM,MAAM;AACpB,iBAAW,QAAQ,CAAC,EAAE,IAAI,MAAM,MAAM,MAAM;AAAA,IAAA,OACvC;AACC,OAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,WAAW,UAAA,CAAU;IAC7B;AAEA,gBAAY,YAAY;AACtB,YAAM,WAAW,UAAU;AAAA,QACzB,MAAM,WAAW,MAAM,KAAK,GAAG;AAAA,MAAA,CAChC;AAAA,IAAA,CACF;AAEK,UAAA,mBAAmB,CAAC,UAAe;AACvC,aAAO,OAAO,KAAK;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}